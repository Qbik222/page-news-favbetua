@font-face {
  font-family: "RobotoCondensed-Bold";
  src: url(../fonts/RobotoCondensed-Bold.woff);
}
@font-face {
  font-family: "RobotoCondensed-Medium";
  src: url(../fonts/RobotoCondensed-Medium.woff);
}
@font-face {
  font-family: "RobotoCondensed-Regular";
  src: url(../fonts/RobotoCondensed-Regular.woff);
}
html {
  height: 100%;
}

body {
  margin: 0;
  height: 100%;
}

a {
  text-decoration: none;
}

ul {
  list-style: none;
}

ul, li, p, h1, h2, h3 {
  padding: 0;
  margin: 0;
}

* {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

body {
  -ms-scroll-chaining: none;
  overscroll-behavior: none;
  background: #F8FAFF;
}
body img {
  max-width: 100%;
  height: auto;
}

.dark .stub-page {
  background: #060D1B;
}

.news-page {
  position: relative;
  width: 100%;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  -ms-scroll-chaining: none;
  overscroll-behavior: none;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  background: #F8FAFF;
  overflow: hidden;
}
.news-page .main {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-box-align: start;
  -ms-flex-align: start;
  align-items: flex-start;
  width: 1246px;
  position: relative;
  margin-top: 36px;
}
.news-page .h1 {
  font-family: RobotoCondensed-Bold, sans-serif;
  color: #000055;
  font-size: 24px;
  text-transform: uppercase;
  display: block;
  width: 100%;
  position: relative;
  margin-bottom: 26px;
}
.news-page .h1::after {
  content: "";
  position: absolute;
  left: 0;
  bottom: -10px;
  width: 100%;
  background: rgba(0, 0, 0, 0.14);
  height: 2px;
  display: block;
}
.news-page .filter {
  font-family: RobotoCondensed-Medium, sans-serif;
  color: #337;
  font-size: 14px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  margin-bottom: 30px;
}
.news-page .filter__item {
  font-family: RobotoCondensed-Medium, sans-serif;
  font-size: 14px;
  color: #337;
  background-color: #EBEEF4;
  margin: 0 8px;
  padding: 9px 16px 11px;
  border-radius: 4px;
  -webkit-transition: 0.2s ease;
  -o-transition: 0.2s ease;
  transition: 0.2s ease;
  cursor: pointer;
}
.news-page .filter__item.active {
  color: #ffffff;
  background-color: #FF3E8C;
}
.news-page .filter__item:hover {
  color: #ffffff;
  background-color: #FF3E8C;
}
.news-page .content {
  width: 100%;
}
.news-page .content .topNews {
  border-radius: 8px 0px 0px 8px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  margin-bottom: 23px;
  overflow: hidden;
}
.news-page .content .topNews__left {
  position: relative;
  z-index: 1;
}
.news-page .content .topNews__left:after {
  content: url("../img/arrow.svg");
  position: absolute;
  width: 30px;
  height: 20px;
  right: 28px;
  bottom: 13px;
  z-index: 2;
}
.news-page .content .topNews__left-img {
  width: 434px;
  height: 245px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  -webkit-transition: 0.2s ease;
  -o-transition: 0.2s ease;
  transition: 0.2s ease;
}
.news-page .content .topNews__left-img:before {
  content: "";
  position: absolute;
  width: 26px;
  height: 26px;
  right: 18px;
  bottom: 10px;
  -webkit-transform: skew(30deg);
  -moz-transform: skew(30deg);
  -o-transform: skew(30deg);
  background: #FF3E8C;
  display: block;
  z-index: 1;
  border-radius: 4px;
}
.news-page .content .topNews__right {
  background-color: #EBEEF4;
  padding: 24px 24px 24px 32px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}
.news-page .content .topNews__right .h2 {
  font-family: RobotoCondensed-Bold, sans-serif;
  font-size: 32px;
  color: #337;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  margin-bottom: 8px;
  overflow: hidden;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 2;
  line-clamp: 2;
  -o-text-overflow: ellipsis;
  text-overflow: ellipsis;
  -webkit-transition: 0.2s ease;
  -o-transition: 0.2s ease;
  transition: 0.2s ease;
}
.news-page .content .topNews__right .newsInfo {
  font-family: RobotoCondensed-Regular, sans-serif;
  font-size: 16px;
  line-height: 26px;
  max-height: 74px;
  overflow: hidden;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 3;
  line-clamp: 3;
  -o-text-overflow: ellipsis;
  text-overflow: ellipsis;
}
.news-page .content .topNews:hover .topNews__left-img {
  position: relative;
}
.news-page .content .topNews:hover .topNews__left-img:after {
  content: "";
  position: absolute;
  width: 100%;
  height: 100%;
  left: 0;
  top: 0;
  display: block;
  background: rgba(0, 0, 85, 0.2);
}
.news-page .content .topNews:hover .topNews__right .h2 {
  color: #FF3E8C;
}
.news-page .content .news {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-box-pack: start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  margin-bottom: 38px;
}
.news-page .content .news__item {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  margin-right: 23px;
  margin-bottom: 23px;
  -webkit-box-flex: 0;
  -ms-flex: 0 1 calc(33.3% - 15px);
  flex: 0 1 calc(33.3% - 15px);
  border-radius: 8px 8px 0px 0px;
  overflow: hidden;
  cursor: pointer;
  position: relative;
}
.news-page .content .news__item:after {
  content: url("../img/arrow.svg");
  position: absolute;
  width: 30px;
  height: 20px;
  right: 28px;
  bottom: 96px;
  z-index: 2;
}
.news-page .content .news__item:before {
  content: "";
  position: absolute;
  width: 26px;
  height: 26px;
  right: 18px;
  bottom: 93px;
  -webkit-transform: skew(30deg);
  -moz-transform: skew(30deg);
  -o-transform: skew(30deg);
  background: #FF3E8C;
  display: block;
  z-index: 1;
  border-radius: 4px;
}
.news-page .content .news__item:nth-child(3n) {
  margin-right: 0;
}
.news-page .content .news__item:nth-child(4), .news-page .content .news__item:nth-child(5) {
  display: none;
}
.news-page .content .news__item-img {
  width: 100%;
  height: auto;
  aspect-ratio: 16/9;
  overflow: hidden;
  -webkit-transition: 0.2s ease;
  -o-transition: 0.2s ease;
  transition: 0.2s ease;
}
.news-page .content .news__item-txt {
  background-color: #EBEEF4;
  padding: 8px 16px;
}
.news-page .content .news__item-txt .h3 {
  font-family: RobotoCondensed-Bold, sans-serif;
  color: #337;
  font-size: 18px;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  overflow: hidden;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 2;
  line-clamp: 2;
  -o-text-overflow: ellipsis;
  text-overflow: ellipsis;
  margin-bottom: 5px;
  -webkit-transition: 0.2s ease;
  -o-transition: 0.2s ease;
  transition: 0.2s ease;
}
.news-page .content .news__item:hover .news__item-txt .h3 {
  color: #FF3E8C;
}
.news-page .content .news__item:hover .news__item-img {
  position: relative;
}
.news-page .content .news__item:hover .news__item-img:after {
  content: "";
  position: absolute;
  width: 100%;
  height: 100%;
  left: 0;
  top: 0;
  display: block;
  background: rgba(0, 0, 85, 0.2);
}
.news-page .newsDate {
  font-family: RobotoCondensed-Regular, sans-serif;
  font-size: 12px;
  color: #337;
  margin-top: auto;
}

@media screen and (max-width: 1261px) {
  .news-page .main {
    width: 95%;
  }
  .news-page .content .topNews__left-img {
    width: 400px;
    height: 226px;
  }
  .news-page .content .topNews__right .h2 {
    font-size: 30px;
  }
  .news-page .content .topNews__right .newsInfo {
    font-size: 14px;
    line-height: 24px;
  }
  .news-page .content .news__item-txt .h3 {
    font-size: 16px;
  }
}
@media screen and (max-width: 1093px) {
  .news-page .content .news__item {
    margin-right: 2%;
    margin-bottom: 2%;
    -webkit-box-flex: 0;
    -ms-flex: 0 1 32%;
    flex: 0 1 32%;
  }
  .news-page .content .news__item-txt .h3 {
    font-size: 15px;
  }
}
@media screen and (max-width: 1000px) {
  .news-page .content .topNews__left-img {
    width: 458px;
    height: 259px;
  }
  .news-page .content .topNews__right .h2 {
    font-size: 27px;
  }
  .news-page .content .topNews__right .newsInfo {
    font-size: 13px;
    line-height: 21px;
  }
  .news-page .content .news__item {
    -webkit-box-flex: 0;
    -ms-flex: 0 1 48.5%;
    flex: 0 1 48.5%;
    margin-right: 3%;
  }
  .news-page .content .news__item:nth-child(3n) {
    margin-right: 3%;
  }
  .news-page .content .news__item:nth-child(2n) {
    margin-right: 0;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
